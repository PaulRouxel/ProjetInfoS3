#include <stdio.h>
#include <stdlib.h>
#include <allegro.h>
#include <stdbool.h>


/// STRUCTURE DES JOUEURS ///
typedef struct joueur  //Cette structure gerera les donnees de joueurs tout au long de la partie
{
    bool communiste;
    bool capitaliste;
    int flouz;
    int eau;
    int electricite;
} t_joueur;

void sleep(int n);

void initialisationAllegro(){
    allegro_init();
    set_color_depth(desktop_color_depth());
    if((set_gfx_mode(GFX_AUTODETECT_WINDOWED,1024,768,0,0))!=0){
        allegro_message("Pb de mode graphique") ;
        allegro_exit();
        exit(EXIT_FAILURE);
    }
    install_keyboard();
    install_mouse();
}

void EcranDeJeu(t_joueur* perso)
{
    printf("ecran de jeu");

    BITMAP* accueil;
    accueil = load_bitmap("C:/Users/Paul Rouxel/CLionProjects/testallegro2/ecrandejeu.bmp",NULL);

    BITMAP* buffer;
    buffer = create_bitmap(SCREEN_W, SCREEN_H);

    //va nous permettre de sortir de la boucle d'affichage lorsqu'un choix est fait
    int next=0;


    //boucle d'affichage
    while(next!=1){

        //routine d'affichage
        blit(accueil, buffer, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        show_mouse(buffer);
        blit(buffer, screen, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        clear_bitmap(buffer);

       // textprintf_ex(accueil, font, 100, 64, makecol(0,0,0), -1, "%d",perso->flouz);
        //textprintf_ex(accueil, font, 150, 110, makecol(0,0,0), -1, "%d",perso->eau);
        //textprintf_ex(accueil, font, 150, 134, makecol(0,0,0), -1, "%d",perso->electricite);

        //correspond aux cases de l'ecran
        if((mouse_b&1)&&(mouse_x>=293)&&(mouse_x<=360)&&(mouse_y>=680)&&(mouse_y<=750))
            next=1;

    }
    allegro_exit();
}


void AffichageCapitaliste()
{
    BITMAP* accueil;
    accueil = load_bitmap("C:/Users/Paul Rouxel/CLionProjects/testallegro2/Capitaliste.bmp",NULL);

    BITMAP* buffer;
    buffer = create_bitmap(SCREEN_W, SCREEN_H);

    //va nous permettre de sortir de la boucle d'affichage lorsqu'un choix est fait
    int next=0;
    int i=0;

    //boucle d'affichage
    while(next!=1){

        //routine d'affichage
        blit(accueil, buffer, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        show_mouse(buffer);
        blit(buffer, screen, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        clear_bitmap(buffer);

        i++;
        if(i>1000)
           next=1;
    }
}

void AffichageCommuniste()
{
    BITMAP* accueil;
    accueil = load_bitmap("C:/Users/Paul Rouxel/CLionProjects/testallegro2/communiste.bmp",NULL);

    BITMAP* buffer;
    buffer = create_bitmap(SCREEN_W, SCREEN_H);

    //va nous permettre de sortir de la boucle d'affichage lorsqu'un choix est fait
    int next=0;
    int i=0;

    //boucle d'affichage
    while(next!=1){

        //routine d'affichage
        blit(accueil, buffer, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        show_mouse(buffer);
        blit(buffer, screen, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        clear_bitmap(buffer);

        i++;
        if(i>1000)
            next=1;
    }
}


void ChoixDuMode(t_joueur* perso)
{
    BITMAP* accueil;
    accueil = load_bitmap("C:/Users/Paul Rouxel/CLionProjects/testallegro2/ecranmodedejeu.bmp",NULL);

    BITMAP* buffer;
    buffer = create_bitmap(SCREEN_W, SCREEN_H);

    //va nous permettre de sortir de la boucle d'affichage lorsqu'un choix est fait
    int next=0;
    int choix=0;

    //boucle d'affichage
    while(next!=1){

        //routine d'affichage
        blit(accueil, buffer, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        show_mouse(buffer);
        blit(buffer, screen, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        clear_bitmap(buffer);

        //correspond aux cases de l'ecran
        if((mouse_b&1)&&(mouse_x>=180)&&(mouse_x<=480)&&(mouse_y>=440)&&(mouse_y<=520))
        {
            choix=1;
            next=1;
        }

        //correspond aux cases de l'ecran
        if((mouse_b&1)&&(mouse_x>=571)&&(mouse_x<=837)&&(mouse_y>=440)&&(mouse_y<=520))
        {
            choix=2;
            next=1;
        }
    }

    if(choix==1) // capitaliste
    {
        perso->capitaliste=true;
        perso->communiste=false;
        AffichageCapitaliste();
    }

    if(choix==2) //communiste
    {
        perso->capitaliste=false;
        perso->communiste=true;
        AffichageCommuniste();
    }
}

void Song() //theme
{
    SAMPLE*son;
    install_sound(DIGI_AUTODETECT,MIDI_AUTODETECT,"A");
    son=load_sample("C:/Users/Paul Rouxel/CLionProjects/testallegro2/zikmu.wav"); //on lance le fichier audio
    play_sample(son,255,0,1000,0);
}



void StructureInit(t_joueur* perso)
{
    perso->eau=0;
    perso->electricite=0;
    perso->flouz=500000;
    //Song();
}

void NouvellePartie(t_joueur* perso)
{
    printf("nouvelle partie");
    StructureInit(perso);
    ChoixDuMode(perso);
    EcranDeJeu(perso);
}

void ChargerUnePartie(t_joueur* perso)
{
    printf("charger une partie");
}

void AfficherRegles(t_joueur* perso)
{
    printf("afficher regles");
}

void Quitter()
{
    allegro_exit();
}

void MenuDemarrage(t_joueur* perso)
{
    //BITMAP
    BITMAP* accueil;
    accueil = load_bitmap("C:/Users/Paul Rouxel/CLionProjects/testallegro2/ecrandemarrageS3.bmp",NULL);

    BITMAP* buffer;
    buffer = create_bitmap(SCREEN_W, SCREEN_H);

    //va nous permettre de sortir de la boucle d'affichage lorsqu'un choix est fait
    int next=0;
    int choix=0;

    //boucle d'affichage
    while(next!=1){

        //routine d'affichage
        blit(accueil, buffer, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        show_mouse(buffer);
        blit(buffer, screen, 0, 0, 0, 0,SCREEN_W, SCREEN_H);
        clear_bitmap(buffer);

        //correspond aux cases de l'ecran
        if((mouse_b&1)&&(mouse_x>=340)&&(mouse_x<=630)&&(mouse_y>=220)&&(mouse_y<=300))
        {
            choix=1;
            next=1;
        }

        //correspond aux cases de l'ecran
        if((mouse_b&1)&&(mouse_x>=340)&&(mouse_x<=630)&&(mouse_y>=320)&&(mouse_y<=387))
        {
            choix=2;
            next=1;
        }

        //correspond aux cases de l'ecran
        if((mouse_b&1)&&(mouse_x>=340)&&(mouse_x<=630)&&(mouse_y>=420)&&(mouse_y<=493))
        {
            choix=3;
            next=1;
        }

        //correspond aux cases de l'ecran
        if((mouse_b&1)&&(mouse_x>=340)&&(mouse_x<=630)&&(mouse_y>=512)&&(mouse_y<=586))
        {
            choix=4;
            next=1;
        }
    }

    if(choix==1)
        NouvellePartie(perso);
    if(choix==2)
        ChargerUnePartie(perso);
    if(choix==3)
        AfficherRegles(perso);
    if(choix==4)
        Quitter();
}


int main()
{
    initialisationAllegro();
    srand(time(NULL));
    t_joueur* homer=(t_joueur*)malloc(sizeof(t_joueur));

    MenuDemarrage(homer);
    return 0;

}
END_OF_MAIN();
